specVersion: 1.0.0
name: astar-wasm-starter
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  A basic Substrate WSSM example project with an event and call handler. Read more
  about this at https://academy.subquery.network/build/substrate-wasm.html. This
  project can be use as a starting point for developing your SubQuery project
repository: "https://github.com/subquery/subql-starter"
schema:
  file: ./schema.graphql
network:
  # The genesis hash of the network (hash of block 0)
  chainId: "0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint:
    ["wss://astar.api.onfinality.io/public-ws", "wss://rpc.astar.network"]
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://api.subquery.network/sq/subquery/astar-dictionary"
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Wasm
    # This is the datasource for Astar's Wasm processor
    startBlock: 3281780
    processor:
      file: ./node_modules/@subql/substrate-wasm-processor/dist/bundle.js
      options:
        abi: erc20
        # contract: "a6Yrf6jAPUwjoi5YvvoTE4ES5vYAMpV55ZCsFHtwMFPDx7H" # Shibuya
        contract: "bZ2uiFGTLcYyP8F88XzXa13xu5Mmp13VLiaW1gGn7rzxktc" # Mainnet
    assets:
      erc20:
        file: ./abis/erc20Metadata.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleWasmEvent
          kind: substrate/WasmEvent
          filter:
            # contract: "a6Yrf6jAPUwjoi5YvvoTE4ES5vYAMpV55ZCsFHtwMFPDx7H" # Shibuya
            contract: "bZ2uiFGTLcYyP8F88XzXa13xu5Mmp13VLiaW1gGn7rzxktc" # Mainnet
            identifier: "Transfer"
        - handler: handleWasmCall
          kind: substrate/WasmCall
          filter:
            selector: "0x681266a0"
            method: "approve"
  - kind: substrate/Runtime
    # This is the datasource for Astar's Native Substrate processor
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleNewContract
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: NewContract
        - handler: handleBondAndStake
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: BondAndStake
        - handler: handleUnbondAndUnstake
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: UnbondAndUnstake
        - handler: handleReward
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: Reward
