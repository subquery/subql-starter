specVersion: 1.0.0
name: moonriver-starter
version: 0.0.4
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: This project can be used as a starting point for developing your SubQuery project. It indexes all transfers on Moonbeam network
repository: "https://github.com/subquery/moonbeam-subql-starters"
schema:
  file: ./schema.graphql
network:
  # The genesis hash of the network (hash of block 0)
  chainId: "0x401a1f9dca3da46f5c4091016c8a2f26dcea05865116b286f60f668207d1474b"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint:
    [
      "wss://moonriver.api.onfinality.io/public-ws",
      "wss://wss.api.moonriver.moonbeam.network",
    ]
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://api.subquery.network/sq/subquery/moonriver-dictionary"
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        # - handler: handleBlock
        #   kind: substrate/BlockHandler
        # - handler: handleCall
        #   kind: substrate/CallHandler
        #   filter:
        #     method:
        #       module: balances
        #       method: Deposit
        #       success: true
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer
